#! /usr/bin/env ruby

require "pg"
require "date"

CONNECTION = PG.connect(dbname: "expenses")

def add_expense(amount, memo)
  date = Date.today
  sql = <<-SQL
  INSERT INTO expenses (amount, memo, created_on)
  VALUES ($1, $2, $3)
  SQL

  CONNECTION.exec_params(sql, [amount, memo, date])
end

def list_expenses
  result = CONNECTION.exec "SELECT * FROM expenses ORDER BY created_on ASC"
  result.each do |tuple|
    columns = [
      tuple["id"].rjust(3),
      tuple["created_on"].rjust(10),
      tuple["amount"].rjust(12),
      tuple["memo"]
    ]

    puts columns.join(" | ")
  end
end

def display_help
  text = <<~HELP
  An expense recording system

  Commands:

  add AMOUNT MEMO - record a new expense
  clear - delete all expenses
  list - list all expenses
  delete NUMBER - remove expense with id NUMBER
  search QUERY - list expenses with a matching memo field
  HELP

  puts text
end

case ARGV.first
when "add"
  amount, memo = ARGV[1, 2]
  abort "You must provide an amount and memo." unless amount && memo
  add_expense(amount, memo)
when "list"
  list_expenses
else
  display_help
end
